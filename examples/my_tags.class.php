<?php

class my_tags {
	
	static function get_requirements()
	{
		 // no external files required for running code generated by this class
		return array ();
	}


	static function expression__default( $tag, $args = NULL )
	{
		return self::_arg2var( $tag );
	}


	static function expression_today( $args )
	{
		return "strtotime( 'today {$args}' )";
	}


	static function tag_if( $arg )
	{
		if ( strpos( $arg, '$' ) !== FALSE )
		{
			return " if ( {$arg} ){ ";
		}

		$var = self::_arg2var( $arg );
		return " if ( ! empty( {$var} ) ){ ";
	}


	static function tag_endif()
	{
		return ' } ';
	}


	static function tag_elseif( $arg )
	{
		if ( strpos( $arg, '$' ) !== FALSE )
		{
			return " } elseif ( {$arg} ){ ";
		}

		$var = self::_arg2var( $arg );
		return " } elseif ( ! empty( {$var} ) ){ ";
	}


	static function tag_else()
	{
		return ' } else { ';
	}


	static function tag_repeat( $arg )
	{
		list ( $var, $varname ) = array_map( 'trim', explode( ',', $arg ) ) + array ( '', 'item' );
		$var = self::_arg2var( $var );
		return " foreach ( {$var} as \${$varname} ){ ";
	}


	static function tag_endrepeat()
	{
		return ' } ';
	}


	static function tag_include( $arg )
	{
		return self::compile( trim( $arg ) );
	}
	
	
	private static function _arg2var( $arg )
	{
		if ( strpos( $arg, '.' ) === FALSE )
		{
			return '$' . trim( $arg );
		}

		$parts = explode( '.', trim( $arg ) );
		return '$' . array_shift( $parts ) . "['" . implode( "']['", $parts ) . "']";
	}
}

// end of file my_tags.class.php
